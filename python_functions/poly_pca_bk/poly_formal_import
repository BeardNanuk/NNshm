#! /usr/bin/python

# import libraries 

import numpy as np

import pandas as pd
import scipy

#from scipy import ndimage

#for making folders
import os, errno
import pandas as pd


import matplotlib.pyplot as plt
import matplotlib.gridspec as gridspec

from pylab import plot, show, ylim, yticks


from scipy import ndimage
import scipy.io # for mat files loading 

# load, slice, and reshape 2D image into to 1D array 
import sys
sys.path.append('/home/j2/home/j2/ml/env/lib/python3.5/site-packages')
from numpy import unravel_index

import cv2
import argparse

from sklearn.model_selection import cross_val_score, train_test_split
from sklearn import datasets
from sklearn import svm
from sklearn.model_selection import ShuffleSplit

# for time stamp 
import time

# generating PPT slides
from pptx import Presentation
from pptx.util import Inches


import pickle 



# for run a python file within a python file 
import subprocess
# my common python functions' location 
my_python_functions_directory = '/home/j2/Desktop/PythonTry/MLshm/python_functions/'
address_zeplot = my_python_functions_directory + 'zeplot.py'
subprocess.run(address_zeplot, shell=True)



# create a class of structure that can be used to store parameters for ML 
class para_struct:
    
    def __init__(self, name): 
        self.name = name
    
    pass
# in bracket is the name for Para
para = para_struct('para')
flag = para_struct('flag')
output_data = para_struct('output_data')
output_matrix = para_struct('output_matrix')



# exec(open("/home/j2/Desktop/PythonTry/MLshm/python_functions/zeplot").read())


# creat folder function 
def folder_create(directory):

	try:
	    os.makedirs(directory)
	except OSError as e:
	    if e.errno != errno.EEXIST:
	        raise

